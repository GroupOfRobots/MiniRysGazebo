// generated from rosidl_adapter/resource/msg.idl.em
// with input from minirys_msgs/msg/MotorDriverStatus.msg
// generated code does not contain a copyright notice

#include "std_msgs/msg/Header.idl"

module minirys_msgs {
  module msg {
    module MotorDriverStatus_Constants {
      const boolean DIRECTION_FWD = TRUE;
      const boolean DIRECTION_REV = FALSE;
    };
    struct MotorDriverStatus {
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "For an explanation on the fields' meanings, see https://mjbogusz.gitlab.io/l6470-linux/")
      @default (value=FALSE)
      boolean hi_z;

      @default (value=FALSE)
      boolean busy;

      @default (value=FALSE)
      boolean direction;

      @default (value=FALSE)
      boolean motor_stopped;

      @default (value=FALSE)
      boolean motor_accelerating;

      @default (value=FALSE)
      boolean motor_decelerating;

      @default (value=FALSE)
      boolean motor_const_speed;

      @default (value=FALSE)
      boolean undervoltage;

      @default (value=FALSE)
      boolean thermal_warning;

      @default (value=FALSE)
      boolean thermal_shutdown;

      @default (value=FALSE)
      boolean overcurrent;

      @default (value=FALSE)
      boolean step_loss_a;

      @default (value=FALSE)
      boolean step_loss_b;
    };
  };
};
